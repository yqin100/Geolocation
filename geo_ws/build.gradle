// variables
ext.xsdMyName = "helloWorld";
ext.xsdFileName = xsdMyName + ".xsd";
ext.xsdJarFileName = xsdMyName + "XSD.jar";

apply plugin: "war"

version = VERSION_PROJECT

sourceCompatibility = SOURCE_COMPATBILITY_VERSION
targetCompatibility = TARGET_COMPATBILITY_VERSION

repositories {
    mavenCentral()
}

configurations {
    jaxb
}

task genJaxb {
    ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
    ext.classesDir = "${buildDir}/classes/jaxb"
    ext.schema = "src/main/resources/" + xsdFileName

    outputs.dir classesDir

    doLast() {
        project.ant {
            taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
                    classpath: configurations.jaxb.asPath
            mkdir(dir: sourcesDir)
            mkdir(dir: classesDir)

            xjc(destdir: sourcesDir, schema: schema) {
                arg(value: "-wsdl")
                produces(dir: sourcesDir, includes: "**/*.java")
            }

            javac(destdir: classesDir, source: sourceCompatibility, target: targetCompatibility, debug: true,
                    debugLevel: "lines,vars,source",
                    classpath: configurations.jaxb.asPath) {
                src(path: sourcesDir)
                include(name: "**/*.java")
                include(name: "*.java")
            }
            
            jar(destfile: "${buildDir}/libs/" + xsdJarFileName) {
            	fileset(dir: classesDir)
            }

            copy(todir: classesDir) {
                fileset(dir: sourcesDir, erroronmissingdir: false) {
                    exclude(name: "**/*.java")
                }
            }
        }
    }
}

dependencies {
    jaxb ('com.sun.xml.bind:jaxb-xjc:2.2.4-1')
    compile (files(genJaxb.classesDir).builtBy(genJaxb))
    
    // soap, depends on spring framework 4.0.5.RELEASE
    compile 'log4j:log4j:1.2.17'
    compile 'org.slf4j:slf4j-log4j12:1.7.7'
	compile 'org.springframework.ws:spring-ws-core:2.2.0.RELEASE'
    compile 'wsdl4j:wsdl4j:+'
    compile 'org.apache.ws.xmlschema:xmlschema-core:2.1.0'
    // rest
    compile 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.4.3'    
    compile 'org.springframework:spring-webmvc:4.0.7.RELEASE'

	// the project jars will be added to the root of the ear file
	// "configuration: 'archives'" will make the operation transitive
    providedCompile project(path: ':' + PROJECT_GEO_CORE, configuration: 'archives')
    providedCompile project(path: ':' + PROJECT_GEO_BUSINESS, configuration: 'archives')
    providedCompile 'javax.servlet:javax.servlet-api:3.0.1'
    
    testCompile 'junit:junit:4.+'
    testCompile 'commons-collections:commons-collections:3.2'
	testCompile 'org.springframework:spring-test:4.0.7.RELEASE'
	testCompile 'org.mockito:mockito-all:1.9.5'
}

war {
	baseName WAR_WS_BASENAME
	
    manifest {
    	attributes('Class-Path' : MY_MANIFEST_CLASSPATH)
    }
}